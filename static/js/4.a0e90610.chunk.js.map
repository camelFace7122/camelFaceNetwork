{"version":3,"sources":["utils/validators/validators.js","components/common/FormsControls/FormsControls.jsx","components/common/FormsControls/FormsControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","hoc/AuthRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPostsForm.jsx","components/Profile/MyPosts/MyPosts.jsx","redux/profile-selectors.js","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["required","value","maxLengthCreator","maxLength","length","maxLength10","maxLength100","FormControl","input","meta","el","textAfter","textBefore","restProps","hasError","touched","error","className","cn","classes","formControl","React","createElement","Textarea","props","Input","text","Checkbox","createField","placeholder","name","validators","component","type","validate","FormError","formSummaryError","module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","Post","item","src","alt","postMessage","message","likesCount","onClick","deletePost","id","reduxForm","form","onSubmit","handleSubmit","Field","posts__textarea","window","MyPosts","postsElements","profilePage","posts","map","key","values","addPost","post","getProfile","profile","getStatus","status","getProfilePage","getProfileUpdateStatus","profileUpdateStatus","MyPostsContainer","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","updateUserStatus","onType","e","currentTarget","prevProps","prevState","autoFocus","onBlur","onChange","onDoubleClick","keys","contacts","title","contact","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfileEdit","useState","setEditMode","useEffect","Preloader","target","files","about","photos","large","userPhoto","initialValues","formData","Profile","content","ProfileContainer","isLoading","Promise","resolve","userId","match","params","authorizedUserId","getUserProfile","getUserStatus","refreshProfile","snapshot","then","compose","getUserId","getUserProfileThunkCreator","getUserStatusTC","updateUserStatusTC","withRouter"],"mappings":"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","file":"static/js/4.a0e90610.chunk.js","sourcesContent":["export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n} \r\n\r\nconst maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\nexport const maxLength10 = maxLengthCreator(10);\r\n\r\nexport const maxLength100 = maxLengthCreator(100);\r\n\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport classes from './FormsControls.module.css';\r\nimport cn from 'classnames';\r\n\r\nconst FormControl = ({ input, meta, el, textAfter, textBefore, ...restProps }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={cn(classes.formControl, {[classes.error]: hasError})}>\r\n            {textBefore && <b>{textBefore}: </b>}{React.createElement(el, { ...input, ...restProps })}{textAfter}\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => <FormControl el='textarea' {...props} />\r\nexport const Input = (props) => <FormControl el='input' textBefore={props.text} {...props} />\r\nexport const Checkbox = (props) => <FormControl el='input' textAfter={props.text}  {...props} />\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, type) => {\r\n    return <Field placeholder={placeholder} name={name} validate={[...validators]} component={component} type={type} />\r\n}\r\n\r\nexport const FormError = ({error}) => {\r\n    return <div className={classes.formSummaryError}>\r\n        {error}\r\n    </div>\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__LxQGF\",\"error\":\"FormsControls_error__3o3tP\",\"formSummaryError\":\"FormsControls_formSummaryError__3QUKy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"ProfileInfo_about__2ze2A\",\"contact\":\"ProfileInfo_contact__1yXr8\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n      \r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts__textarea\":\"MyPosts_posts__textarea__3wU10\",\"posts\":\"MyPosts_posts__q5tes\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3UvqT\",\"postMessage\":\"Post_postMessage__2jGFl\"};","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n      <div className={classes.item}>\r\n        <img src=\"https://static.360tv.ru/media/article_media/7e00c45cfdb9489cad203327cb94bb0d_201708211251.jpg\" alt=\"cowboy\"/>\r\n        <span className={classes.postMessage}>{props.message}</span>\r\n        <div>like it! <span>{props.likesCount}</span></div>\r\n        <button onClick={() => {props.deletePost(props.id)}}>Delete</button>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Post;\r\n\r\n\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {required, maxLength10} from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport classes from './MyPosts.module.css';\r\n\r\nconst MyPostsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={'post'}\r\n            placeholder=\"Type something\"  \r\n            validate={[required, maxLength10]} \r\n            className={classes.posts__textarea}/>\r\n            <div><button>Add Post</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'myPosts',})(MyPostsForm);","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport MyPostsReduxForm from './MyPostsForm';\r\n\r\nwindow.props = [];\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.profilePage.posts.map(el => {\r\n        return <Post key={el.id} deletePost={props.deletePost} id={el.id} message={el.message} likesCount={el.likesCount}/>\r\n    })\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.post);\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.posts}>\r\n            <h2>My Posts</h2>\r\n            <MyPostsReduxForm onSubmit={addNewPost} />\r\n            {postsElements} \r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default MyPosts;\r\n\r\n\r\n","export const getProfile = (state) => {\r\n    return state.profilePage.profile;\r\n}\r\n\r\nexport const getStatus = (state) => {\r\n    return state.profilePage.status;\r\n}\r\n\r\nexport const getProfilePage = (state) => {\r\n    return state.profilePage;\r\n}\r\n\r\nexport const getProfileUpdateStatus = (state) => {\r\n    return state.profilePage.profileUpdateStatus;\r\n}","import React from 'react';\r\nimport { addPost, deletePost } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport { getProfilePage } from '../../../redux/profile-selectors';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: getProfilePage(state),\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost, deletePost})(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status,\r\n            })\r\n        }\r\n    }\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true,\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false,\r\n        })\r\n        this.props.updateUserStatus(this.state.status);\r\n    }\r\n\r\n    onType = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value, \r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {!this.state.editMode \r\n                ? <div>\r\n                    <span onDoubleClick={ this.activateEditMode }>{this.props.status || '---'}</span>\r\n                </div>\r\n                : <div>\r\n                    <input autoFocus={true} onBlur={this.deactivateEditMode } \r\n                     value={this.state.status} onChange={this.onType} /> \r\n                </div>\r\n            }        \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport {createField, FormError, Input, Textarea} from '../../common/FormsControls/FormsControls';\r\nimport classes from './ProfileInfo.module.css';\r\nimport {required} from '../../../utils/validators/validators';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport { reduxForm } from 'redux-form';\r\n\r\n\r\nconst ProfileDataForm = ({ profile, status, updateUserStatus, handleSubmit, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h4>Full Name: {createField('full name', 'fullName', [required], Input)}</h4>\r\n            <p><b>Status: </b><ProfileStatus status={status} updateUserStatus={updateUserStatus} /></p>\r\n            <span>{createField(null, 'lookingForAJob', [], (props) => <Input {...props} text={'Looking for A Job'} />, 'checkbox')}</span>\r\n            <p><b>Looking For A Job Description: </b> {createField('describe a job that you wish', 'lookingForAJobDescription', [required], Textarea)}</p>\r\n            <p><b>About Me: </b> {createField('few sentences about yourself', 'aboutMe', [required], Textarea)}</p>\r\n            <div><b>Contacts: </b> {Object.keys(profile.contacts).map(title => {\r\n                return <div className={classes.contact} \r\n                key={title}> <b>{title}</b> {createField(title, 'contacts.' + title, [], Input)}</div>\r\n            })}</div>\r\n            {error && <FormError error={error} />}\r\n            <div><button>Save</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default reduxForm({form: 'edit-profile'})(ProfileDataForm);","import React, {useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileDataReduxForm from './ProfileDataForm';\r\nimport { useEffect } from 'react';\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus, isOwner, savePhoto, saveProfileEdit, profileUpdateStatus}) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n      if (profileUpdateStatus === 'success') {\r\n        setEditMode(false); \r\n      } \r\n    }, [profileUpdateStatus])\r\n    \r\n    if(!profile) {\r\n      return <Preloader />\r\n    } \r\n\r\n    const onUserPhotoSelected = (e) => {\r\n      if (e.target.files.length) {\r\n        savePhoto(e.target.files[0]);\r\n      }\r\n    }\r\n\r\n    const onEditSaved = (formData) => {\r\n      saveProfileEdit(formData);\r\n    }\r\n      \r\n    return (\r\n      <div>\r\n        {isOwner && <input type={'file'} onChange={ onUserPhotoSelected } />}\r\n        <div className={classes.about}>\r\n          <img src={profile.photos.large || userPhoto} />\r\n          {\r\n            editMode ? <ProfileDataReduxForm initialValues={profile} profile={profile} status={status} \r\n            updateUserStatus={updateUserStatus} onSubmit={onEditSaved} /> \r\n            : <ProfileData profile={profile} status={status} isOwner={isOwner} goToEditMode={() => {setEditMode(true)}} \r\n            updateUserStatus={updateUserStatus} />\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, status, isOwner, goToEditMode, updateUserStatus}) => {\r\n  return (\r\n    <div>\r\n      <h4>{profile.fullName}</h4>\r\n      <div><b>Status: </b><ProfileStatus status={status} updateUserStatus={updateUserStatus} /></div>\r\n      <p><b>Looking for Job: </b>{profile.lookingForAJob ? 'Yes' : 'No'}</p>\r\n      <p><b>Looking For A Job Description: </b>{profile.lookingForAJobDescription}</p>\r\n      <p><b>About Me: </b>{profile.aboutMe}</p>\r\n      <div><b>Contacts: </b> {\r\n        Object.keys(profile.contacts).map(title => {\r\n          return <Contact key={title} contactTitle={title} contactValue={profile.contacts[title] || 'none'} />\r\n        })\r\n      }</div>\r\n      <div>{isOwner && <button onClick={goToEditMode}>Edit</button>}</div>\r\n    </div>\r\n  )\r\n}\r\n  \r\nconst Contact = ({contactTitle, contactValue}) => {\r\n  return (\r\n    <p className={classes.contact}><b>{contactTitle}</b>: {contactValue}</p>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n      <div className={classes.content}>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus} \r\n        isOwner={props.isOwner} savePhoto={props.savePhoto} saveProfileEdit={props.saveProfileEdit} \r\n        profileUpdateStatus={props.profileUpdateStatus} />\r\n        <MyPostsContainer/>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfileThunkCreator, getUserStatusTC, updateUserStatusTC, savePhoto, saveProfileEdit} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom'; \r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getProfile, getStatus, getProfileUpdateStatus } from '../../redux/profile-selectors';\r\nimport { getUserId } from '../../redux/auth-selectors';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    \r\n    refreshProfile() {\r\n      return new Promise((resolve) => {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) userId = this.props.authorizedUserId;\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n        resolve();\r\n      })\r\n    } \r\n\r\n    componentDidMount() {\r\n      this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n      if (prevProps.match.params.userId !== this.props.match.params.userId) {\r\n        this.setState({isLoading: true})\r\n        this.refreshProfile().then(() => {\r\n          this.setState({isLoading: false});\r\n        })\r\n      }\r\n    }\r\n\r\n    state = {\r\n      isLoading: false,\r\n    }\r\n\r\n    render() { \r\n      if (this.state.isLoading) {\r\n        return <Preloader />\r\n      }\r\n      return <Profile \r\n      {...this.props} \r\n      profile={this.props.profile} \r\n      status={this.props.status} \r\n      updateUserStatus={this.props.updateUserStatus} \r\n      isOwner={!this.props.match.params.userId}\r\n      savePhoto={this.props.savePhoto} \r\n      saveProfileEdit={this.props.saveProfileEdit}\r\n      profileUpdateStatus={this.props.profileUpdateStatus} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: getProfile(state),\r\n    status: getStatus(state),\r\n    authorizedUserId: getUserId(state),\r\n    profileUpdateStatus: getProfileUpdateStatus(state),\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { \r\n  getUserProfile: getUserProfileThunkCreator,\r\n  getUserStatus: getUserStatusTC,\r\n  updateUserStatus: updateUserStatusTC,\r\n  savePhoto,\r\n  saveProfileEdit, \r\n  }), \r\n  withRouter, \r\n  withAuthRedirect,\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}