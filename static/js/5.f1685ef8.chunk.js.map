{"version":3,"sources":["utils/validators/validators.js","components/common/FormsControls/FormsControls.jsx","components/common/FormsControls/FormsControls.module.css","hoc/AuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsForm.jsx","components/Dialogs/Dialogs.jsx","redux/dialogs-selectors.js","components/Dialogs/DialogsContainer.jsx"],"names":["required","value","maxLengthCreator","maxLength","length","maxLength10","maxLength100","FormControl","input","meta","el","textAfter","textBefore","restProps","hasError","touched","error","className","cn","classes","formControl","React","createElement","Textarea","props","Input","text","Checkbox","createField","placeholder","name","validators","component","type","validate","FormError","formSummaryError","module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","connect","DialogItem","dialog","id","Message","message","reduxForm","createRef","form","onSubmit","handleSubmit","Field","Dialogs","dialogsElements","dialogsPage","dialogs","map","key","messagesElements","messages","dialogsItems","values","addMessage","getDialogsPage","compose","getIsAuth","dispatch","addMessageAC"],"mappings":"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","file":"static/js/5.f1685ef8.chunk.js","sourcesContent":["export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n} \r\n\r\nconst maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\nexport const maxLength10 = maxLengthCreator(10);\r\n\r\nexport const maxLength100 = maxLengthCreator(100);\r\n\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport classes from './FormsControls.module.css';\r\nimport cn from 'classnames';\r\n\r\nconst FormControl = ({ input, meta, el, textAfter, textBefore, ...restProps }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={cn(classes.formControl, {[classes.error]: hasError})}>\r\n            {textBefore && <b>{textBefore}: </b>}{React.createElement(el, { ...input, ...restProps })}{textAfter}\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => <FormControl el='textarea' {...props} />\r\nexport const Input = (props) => <FormControl el='input' textBefore={props.text} {...props} />\r\nexport const Checkbox = (props) => <FormControl el='input' textAfter={props.text}  {...props} />\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, type) => {\r\n    return <Field placeholder={placeholder} name={name} validate={[...validators]} component={component} type={type} />\r\n}\r\n\r\nexport const FormError = ({error}) => {\r\n    return <div className={classes.formSummaryError}>\r\n        {error}\r\n    </div>\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__LxQGF\",\"error\":\"FormsControls_error__3o3tP\",\"formSummaryError\":\"FormsControls_formSummaryError__3QUKy\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n      \r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__15fKs\",\"dialogsItems\":\"Dialogs_dialogsItems__11_Ts\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__rH3fP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__1Hl2R\"};","import React from 'react';\r\nimport classes from './DialogItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './Message.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { required, maxLength100 } from '../../utils/validators/validators';\r\n\r\nlet newMessageEl = React.createRef();\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field component={Textarea} name={'message'} placeholder='Enter your message' \r\n            validate={[required, maxLength100]} /></div>\r\n            <button>Add message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialogs'})(DialogsForm);\r\n","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport DialogsReduxForm from './DialogsForm';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    const addNewMessage = (values) => {\r\n        props.addMessage(values.message);\r\n    } \r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(el => {\r\n        return <DialogItem key={el.id} name={el.name} id={el.id} />\r\n    })\r\n\r\n    let messagesElements = props.dialogsPage.messages.map(el => {\r\n        return <Message key={el.id} message={el.message} />\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.dialogs}>\r\n                <div className={classes.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={classes.messages}>\r\n                    <div>{messagesElements}</div>\r\n                    <DialogsReduxForm onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","export const getDialogsPage = (state) => {\r\n    return state.dialogsPage;\r\n}","import React from 'react';\r\nimport { addMessageAC} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getDialogsPage } from '../../redux/dialogs-selectors';\r\nimport { getIsAuth } from '../../redux/auth-selectors';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: getDialogsPage(state),\r\n        isAuth: getIsAuth(state),\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (message) => {\r\n            dispatch(addMessageAC(message));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(withAuthRedirect, connect(mapStateToProps, mapDispatchToProps))(Dialogs)\r\n\r\n "],"sourceRoot":""}